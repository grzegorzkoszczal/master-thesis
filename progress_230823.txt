What has been achieved:
1.  Work is re-written in LaTeX: You can ask supervisor if
    this format is acceptable
2.  Tests have been performed on university cluster
    (sanna.kask) using command below:
    taskset --cpu-list 0-15 perf stat -e power/energy-cores/,power/energy-gpu/,power/energy-pkg/ ./ft.C
3.  NPB have class sizes for both CPU and GPU benchmarks, but none of them can run on multiple GPUs.
    Therefore, for tests on 2 or more GPUs I suggest to use code from research project. We can define
    class sizes on that problem as the train dataset size: for purpose of our research we used 69 classes
    with a total of 10,000 images to train, we can call that, for example a class=A, next the train
    dataset of 20,000 images would be called class=B and so on, to a maximum of over 80k images on largest
    class.
4.  How to run benchmarks on BOTH CPU(s) and GPU(s)? My initial solution is to execute both codes compiled
    for CPUs and GPUs at the same time: code written in CUDA will execute much faster on the same problem
    and the same class size on GPU that code in C++ for CPU, therefore I should create a controlling script
    that will run the GPU benchmark again, as long as the code on CPU is still computing. When the CPU
    benchmark ends successfully, then a SIGTERM is send to end the GPU code, resulting in fully utilizing
    the resources of both CPUs and GPUs during the tests.
5.  Show the workflow (preparation of the servers and used configurations) from the presentation
    for Master Thesis Seminar.

==================================================

What is already planned to do / questions to the supervisor:
1.  Add the preliminary tests from presentation, about
    choosing the correct CPU benchmarks as well as correct
    class sizes. (as a preliminary tests section, maybe
    shout-out to my local rig?)
2.  Ask about the configurations. Are they sufficient? Or we
    plan to run the tests on 2 nodes using 2 power meters
    (may require additional software such as pssh)
3.  Ask about the status of the current power meter (old one)
    and the status / plans for the second power meter.
4.  Ask the administrator of the servers to install rest
    of the necessary software (parallel-ssh in order to
    work and run benchmarks on two nodes, pip in order
    to re-install yoko-tool software for )
5.  Should I write abstract in Polish aswell?
6.  Should I write names of chapters, bibliography etc. 
    in all upper case?

==================================================

What to do next (conclusions after consultations):
1.  Test and check the results of the runs, but most important: simply experiment


Tests on sanna.kask using NPB-OMP benchmarks
// ==========
1 CPU:
1 thread:
time taskset --cpu-list 0 ./is.D
real:   10m45.781s

5 threads
time taskset --cpu-list 0-4 ./is.D
real:   2m23.910s

10 threads:
time taskset --cpu-list 0-9 ./is.D
real:   1m15.647s

20 threads:
time taskset --cpu-list 0-19 ./is.D
real:   0m44.371s

// ==========
2 CPUs:
2 threads:
time taskset --cpu-list 0,20 ./is.D
real:   7m42.465s

10 threads:
time taskset --cpu-list 0-4,20-24 ./is.D
real:   1m39.325s

20 threads:
time taskset --cpu-list 0-9,20-29 ./is.D
real:   0m56.676s

40 threads:
time taskset --cpu-list 0-39 ./is.D
real:   0m36.360s

